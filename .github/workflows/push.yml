on: push
name: validate
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v3.0.6
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key:
            ${{ runner.os }}-build-${{ env.cache-name }}-${{
            hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm ci
      - run: npm run lint
        env:
          ESLINT_FORMAT_OPTIONS:
            '--format json-with-metadata --output-file reports/style/eslint.json'
          TSC_OPTIONS: '| tee reports/style/tsc.log'
      - uses: check-run-reporter/action@v2.11.1
        if: ${{ always() }}
        with:
          token: ${{ secrets.CHECK_RUN_REPORTER_TOKEN }}
          label: ESLint
          report: 'reports/style/eslint.json'
      - uses: check-run-reporter/action@v2.11.1
        if: ${{ always() }}
        with:
          token: ${{ secrets.CHECK_RUN_REPORTER_TOKEN }}
          label: TSC
          report: 'reports/style/tsc.log'

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v3.0.6
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key:
            ${{ runner.os }}-build-${{ env.cache-name }}-${{
            hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm ci
      - run: |
          pip install --upgrade pyopenssl
          pip install localstack awscli-local[ver1] aws-sam-cli-local
          docker pull localstack/localstack
          localstack start -d

          echo "Waiting for LocalStack startup..."
          localstack wait -t 30
          echo "Startup complete"
      - run: |
          for file in $(find examples -mindepth 1 -maxdepth 1 -type d); do
            stackname=$(echo $file | awk -F/ '{print $2}')
            samlocal deploy --template "$file/__generated__/template.yml" --stack-name "$stackname" --region us-east-1
          done
      - run: npm test
      - uses: check-run-reporter/action@v2.11.1
        if: ${{ always() }}
        with:
          token: ${{ secrets.CHECK_RUN_REPORTER_TOKEN }}
          label: Unit Tests
          report: 'reports/junit/**/*.xml'
