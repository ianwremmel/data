"""
JavaScript Date stored as a Number in DynamoDB
"""
scalar Date

"""
Arbitrary JSON stored as a Map in DynamoDB
"""
scalar JSONObject

"""
Indicates all reads for this type will be done using DynamoDB's
strong-consistency mode. General discouraged, though certain user-facing flows
might require it.
"""
directive @consistent on OBJECT

"""
Indicates the Model in question must use a partition key without a primary key,
have exactly one field as its main identifier, and that that field will be
generated automatically on create.
"""
directive @autoKey(field: String!) on OBJECT

"""
Indicates this Model has a composite key generated from the specified fields.
"""
directive @compositeKey(
  pkFields: [String!]!
  pkPrefix: String
  skFields: [String!]!
  skPrefix: String
) on OBJECT

"""
Indicates this Model has a composite Global Secondary Index. May be specified
more than once.
"""
directive @compositeIndex(
  """
  The name of the index. Typically, this is something like "gsi1", "gsi2", etc.
  It cannot be autogenerated because it must remain stable if, say, another
  index is removed. It must be unique across all indexes on this model, but may
  be shared across models using the same table.
  """
  name: String!
  pkFields: [String!]!
  pkPrefix: String
  skFields: [String!]!
  skPrefix: String
) on OBJECT

"""
Indicates the field will be configured as the DynamoDB ttl field for this type.
Always gets saved to a column named "ttl" to avoid conflicts in single-table
entities that all might use different names
"""
directive @ttl(duration: String!) on FIELD_DEFINITION

"""
Models are DynamoDB with a key schema that does not include a sort key.
"""
interface Model implements Timestamped & Versioned {
  createdAt: Date!
  updatedAt: Date!
  version: Int!
}

"""
Automatically adds a createdAt and updatedAt timestamp to the entity and sets
them appropriately. The createdAt timestamp is only set on create, while the
updatedAt timestamp is set on create and update.
"""
interface Timestamped {
  """
  Set automatically when the item is first written
  """
  createdAt: Date!
  """
  Set automatically when the item is updated
  """
  updatedAt: Date!
}

"""
Automatically adds a column to enable optimistic locking. This field shouldn't
be manipulated directly, but may need to be passed around by the runtime in
order to make updates.
"""
interface Versioned {
  version: Int!
}
