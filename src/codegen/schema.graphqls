"""
JavaScript Date stored as a Number in DynamoDB
"""
scalar Date

"""
Arbitrary JSON stored as a Map in DynamoDB
"""
scalar JSONObject

"""
Indicates all reads for this type will be done using DynamoDB's
strong-consistency mode. General discouraged, though certain user-facing flows
might require it.
"""
directive @consistent on OBJECT

"""
Indicates the field will be configured as the DynamoDB ttl field for this type.
Always gets saved to a column named "ttl" to avoid conflicts in single-table
entities that all might use different names
"""
directive @ttl(duration: String!) on FIELD_DEFINITION

"""
Automatically adds a createdAt and updatedAt timestamp to the entity and sets
them appropriately. The createdAt timestamp is only set on create, while the
updatedAt timestamp is set on create and update.
"""
interface Timestamped {
  """
  Set automatically when the item is first written
  """
  createdAt: Date!
  """
  Set automatically when the item is updated
  """
  updatedAt: Date!
}

"""
Automatically adds a column to enable optimistic locking. This field shouldn't
be manipulated directly, but may need to be passed around by the runtime in
order to make updates.
"""
interface Versioned {
  version: Int!
}

"""
SimpleModels are DynamoDB with a key schema that does not include a sort key.
"""
interface SimpleModel implements Timestamped & Versioned {
  createdAt: Date!
  id: ID!
  updatedAt: Date!
  version: Int!
}
