AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Conditions:
  IsProd:
    Fn::Equals:
      - Ref: StageName
      - production
Globals:
  Function:
    Environment:
      Variables:
        TABLE_ACCOUNT:
          Ref: TableAccount
        TABLE_SUBSCRIPTION:
          Ref: TableSubscription
    Handler: index.handler
    MemorySize: 256
    Runtime: nodejs18.x
    Timeout: 30
    Tracing: Active
Outputs:
  TableAccount:
    Description: The name of the DynamoDB table for Account
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-TableAccount
      Value:
        Ref: TableAccount
    Value:
      Ref: TableAccount
  TableSubscription:
    Description: The name of the DynamoDB table for Subscription
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-TableSubscription
      Value:
        Ref: TableSubscription
    Value:
      Ref: TableSubscription
Parameters:
  StageName:
    Type: String
    AllowedValues:
      - development
      - production
      - test
    Description: The name of the stage
    Default: development
  LogRetentionInDays:
    Type: Number
    Description: Log retention in days
    Default: 3
Resources:
  TableAccount:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled:
          Fn::If:
            - IsProd
            - true
            - false
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      Tags:
        - Key: StageName
          Value:
            Ref: StageName
        - Key: TableName
          Value: TableAccount
  TableSubscriptionCDCDispatcherLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${TableSubscriptionCDCDispatcher}
      RetentionInDays:
        Ref: LogRetentionInDays
  TableSubscriptionCDCDispatcher:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dispatcher-table-subscription
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            BatchSize: 10
            FunctionResponseTypes:
              - ReportBatchItemFailures
            MaximumRetryAttempts: 3
            StartingPosition: TRIM_HORIZON
            Stream:
              Fn::GetAtt:
                - TableSubscription
                - StreamArn
      MemorySize: 384
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - CloudWatchLambdaInsightsExecutionRolePolicy
        - CloudWatchPutMetricPolicy: {}
        - EventBridgePutEventsPolicy:
            EventBusName: default
      Timeout: 60
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - ./index
        Minify: false
        Sourcemap: true
        Target: es2020
  SubscriptionCDCHandlerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${SubscriptionCDCHandler}
      RetentionInDays:
        Ref: LogRetentionInDays
  SubscriptionCDCHandlerDLQ:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: alias/aws/sqs
  SubscriptionCDCHandlerEventBridgeDLQ:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: alias/aws/sqs
  SubscriptionCDCHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handler-subscription
      DeadLetterQueue:
        TargetArn:
          Fn::GetAtt:
            - SubscriptionCDCHandlerEventBridgeDLQ
            - Arn
        Type: SQS
      Events:
        INSERT:
          Type: EventBridgeRule
          Properties:
            DeadLetterConfig:
              Arn:
                Fn::GetAtt:
                  - SubscriptionCDCHandlerDLQ
                  - Arn
            EventBusName: default
            Pattern:
              detail:
                dynamodb:
                  NewImage:
                    _et:
                      S:
                        - Subscription
              detail-type:
                - INSERT
              resources:
                - Fn::GetAtt:
                    - TableSubscription
                    - Arn
              source:
                - TableSubscription.Subscription
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - CloudWatchLambdaInsightsExecutionRolePolicy
        - CloudWatchPutMetricPolicy: {}
        - DynamoDBCrudPolicy:
            TableName:
              Ref: TableAccount
        - SQSSendMessagePolicy:
            QueueName:
              Fn::GetAtt:
                - SubscriptionCDCHandlerDLQ
                - QueueName
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - ./index
        Minify: false
        Sourcemap: true
        Target: es2020
  TableSubscription:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled:
          Fn::If:
            - IsProd
            - true
            - false
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      Tags:
        - Key: StageName
          Value:
            Ref: StageName
        - Key: TableName
          Value: TableSubscription
