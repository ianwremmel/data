"""
A user session object.
"""
type UserSession implements Model & Node & Timestamped & Versioned
  @consistent
  @partitionKey(pkFields: ["sessionId"], pkPrefix: "USER_SESSION")
  @table(
    enablePointInTimeRecovery: false
    enableStreaming: true
    name: "TableUserSessions"
  ) {
  createdAt: Date!
  expires: Date @ttl
  id: ID!
  """
  Since `id` is a reserved field, sessionId is the field we'll use to inject a
  random uuid, which the underlying system will use as the basis for `id`.
  """
  sessionId: String!
  session: JSONObject!
  updatedAt: Date!
  version: Int!
  """
  This field has nothing to do with UserSession, but this was the easiest place
  to add it for testing. The intent is to prove that we can write an object,
  when an optional field is absent from the payload.
  """
  optionalField: String

  aliasedField: String @alias(name: "renamedField")
}
