AWSTemplateFormatVersion: '2010-09-09'
Conditions:
  CreateChangeDataCaptureAlarmsCondition:
    Fn::Equals:
      - Ref: CreateChangeDataCaptureAlarms
      - 'true'
  IsProd:
    Fn::Equals:
      - Ref: StageName
      - production
Globals:
  Function:
    Environment:
      Variables:
        TABLE_ACCOUNTS:
          Ref: TableAccounts
        TABLE_EMAIL:
          Ref: TableEmail
    Handler: index.handler
    MemorySize: 256
    Runtime: nodejs18.x
    Timeout: 30
    Tracing: Active
Outputs:
  TableAccounts:
    Description: The name of the DynamoDB table for TableAccounts
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-TableAccounts
    Value:
      Ref: TableAccounts
  TableEmail:
    Description: The name of the DynamoDB table for TableEmail
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-TableEmail
    Value:
      Ref: TableEmail
Parameters:
  CreateChangeDataCaptureAlarms:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: Controls whether or not CloudWatch alarms are deployed
    Type: String
  LogRetentionInDays:
    Default: 3
    Description: Log retention in days
    Type: Number
  StageName:
    AllowedValues:
      - development
      - production
      - test
    Default: development
    Description: The name of the stage
    Type: String
Resources:
  FnHandlerSInsertAa23d7fc7:
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - ./index
        External:
          - '@aws-sdk/*'
        Minify: false
        Sourcemap: true
        Target: es2020
    Properties:
      CodeUri: enricher--subscription--insert--account
      DeadLetterQueue:
        TargetArn:
          Fn::GetAtt:
            - FnHandlerSInsertAa23d7fc7EventBridgeDLQ
            - Arn
        Type: SQS
      Events:
        INSERT:
          Properties:
            DeadLetterConfig:
              Arn:
                Fn::GetAtt:
                  - FnHandlerSInsertAa23d7fc7DLQ
                  - Arn
            EventBusName: default
            Pattern:
              detail:
                dynamodb:
                  NewImage:
                    _et:
                      S:
                        - Subscription
              detail-type:
                - INSERT
              resources:
                - Fn::GetAtt:
                    - TableAccounts
                    - Arn
              source:
                - TableAccounts.Subscription
          Type: EventBridgeRule
      MemorySize: 256
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - CloudWatchLambdaInsightsExecutionRolePolicy
        - CloudWatchPutMetricPolicy: {}
        - DynamoDBCrudPolicy:
            TableName:
              Ref: TableAccounts
        - SQSSendMessagePolicy:
            QueueName:
              Fn::GetAtt:
                - FnHandlerSInsertAa23d7fc7DLQ
                - QueueName
      Timeout: 30
    Type: AWS::Serverless::Function
  FnHandlerSInsertAa23d7fc7ColdstartLatencyAlarm:
    Condition: CreateChangeDataCaptureAlarmsCondition
    Properties:
      ActionsEnabled: true
      AlarmActions: []
      AlarmDescription: FnHandlerSInsertAa23d7fc7 Coldstart Latency > 500ms
      AlarmName: FnHandlerSInsertAa23d7fc7 Coldstart Latency
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 3
      Dimensions:
        - Name: function_name
          Value:
            Ref: FnHandlerSInsertAa23d7fc7
      EvaluationPeriods: 5
      MetricName: init_duration
      Namespace: LambdaInsights
      OKActions: []
      Period: 60
      Statistic: Maximum
      Threshold: 500
      TreatMissingData: notBreaching
    Type: AWS::CloudWatch::Alarm
  FnHandlerSInsertAa23d7fc7DLQ:
    Properties:
      KmsMasterKeyId: alias/aws/sqs
    Type: AWS::SQS::Queue
  FnHandlerSInsertAa23d7fc7DLQDLQAlarm:
    Condition: CreateChangeDataCaptureAlarmsCondition
    Properties:
      ActionsEnabled: true
      AlarmActions: []
      AlarmDescription: FnHandlerSInsertAa23d7fc7DLQ DLQ has messages
      AlarmName: FnHandlerSInsertAa23d7fc7DLQ DLQ
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: QueueName
          Value:
            Fn::GetAtt:
              - FnHandlerSInsertAa23d7fc7DLQ
              - QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      OKActions: []
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
    Type: AWS::CloudWatch::Alarm
  FnHandlerSInsertAa23d7fc7EventBridgeDLQ:
    Properties:
      KmsMasterKeyId: alias/aws/sqs
    Type: AWS::SQS::Queue
  FnHandlerSInsertAa23d7fc7EventBridgeDLQDLQAlarm:
    Condition: CreateChangeDataCaptureAlarmsCondition
    Properties:
      ActionsEnabled: true
      AlarmActions: []
      AlarmDescription: FnHandlerSInsertAa23d7fc7EventBridgeDLQ DLQ has messages
      AlarmName: FnHandlerSInsertAa23d7fc7EventBridgeDLQ DLQ
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: QueueName
          Value:
            Fn::GetAtt:
              - FnHandlerSInsertAa23d7fc7EventBridgeDLQ
              - QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      OKActions: []
      Period: 60
      Statistic: Sum
      Threshold: 0
      TreatMissingData: notBreaching
    Type: AWS::CloudWatch::Alarm
  FnHandlerSInsertAa23d7fc7LambdaP99Alarm:
    Condition: CreateChangeDataCaptureAlarmsCondition
    Properties:
      ActionsEnabled: true
      AlarmActions: []
      AlarmDescription: FnHandlerSInsertAa23d7fc7 P99 Latency > 1000ms
      AlarmName: FnHandlerSInsertAa23d7fc7 Lambda Latency (P99)
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 3
      Dimensions:
        - Name: FunctionName
          Value:
            Ref: FnHandlerSInsertAa23d7fc7
      EvaluationPeriods: 5
      ExtendedStatistic: p99
      MetricName: Duration
      Namespace: AWS/Lambda
      OKActions: []
      Period: 60
      Threshold: 1000
      TreatMissingData: notBreaching
      Unit: Milliseconds
    Type: AWS::CloudWatch::Alarm
  FnHandlerSInsertAa23d7fc7LogGroup:
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${FnHandlerSInsertAa23d7fc7}
      RetentionInDays:
        Ref: LogRetentionInDays
    Type: AWS::Logs::LogGroup
  FnHandlerSInsertAa23d7fc7MemoryUsageAlarm:
    Condition: CreateChangeDataCaptureAlarmsCondition
    Properties:
      ActionsEnabled: true
      AlarmActions: []
      AlarmDescription: FnHandlerSInsertAa23d7fc7 Memory Usage > 80%
      AlarmName: FnHandlerSInsertAa23d7fc7 Memory Usage
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 3
      Dimensions:
        - Name: function_name
          Value:
            Ref: FnHandlerSInsertAa23d7fc7
      EvaluationPeriods: 5
      MetricName: memory_utilization
      Namespace: LambdaInsights
      OKActions: []
      Period: 60
      Statistic: Maximum
      Threshold: 80
      TreatMissingData: notBreaching
    Type: AWS::CloudWatch::Alarm
  TableAccounts:
    Properties:
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
        - AttributeName: lsi1sk
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      LocalSecondaryIndexes:
        - IndexName: lsi1
          KeySchema:
            - AttributeName: pk
              KeyType: HASH
            - AttributeName: lsi1sk
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled:
          Fn::If:
            - IsProd
            - true
            - false
      SSESpecification:
        SSEEnabled:
          Fn::If:
            - IsProd
            - true
            - false
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      Tags:
        - Key: StageName
          Value:
            Ref: StageName
        - Key: TableName
          Value: TableAccounts
    Type: AWS::DynamoDB::Table
  TableAccountsCDCDispatcher:
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - ./index
        External:
          - '@aws-sdk/*'
        Minify: false
        Sourcemap: true
        Target: es2020
    Properties:
      CodeUri: dispatcher-table-accounts
      Events:
        Stream:
          Properties:
            BatchSize: 10
            FunctionResponseTypes:
              - ReportBatchItemFailures
            MaximumRetryAttempts: 3
            StartingPosition: TRIM_HORIZON
            Stream:
              Fn::GetAtt:
                - TableAccounts
                - StreamArn
          Type: DynamoDB
      MemorySize: 384
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - CloudWatchLambdaInsightsExecutionRolePolicy
        - CloudWatchPutMetricPolicy: {}
        - EventBridgePutEventsPolicy:
            EventBusName: default
      Timeout: 60
    Type: AWS::Serverless::Function
  TableAccountsCDCDispatcherColdstartLatencyAlarm:
    Condition: CreateChangeDataCaptureAlarmsCondition
    Properties:
      ActionsEnabled: true
      AlarmActions: []
      AlarmDescription: TableAccountsCDCDispatcher Coldstart Latency > 500ms
      AlarmName: TableAccountsCDCDispatcher Coldstart Latency
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 3
      Dimensions:
        - Name: function_name
          Value:
            Ref: TableAccountsCDCDispatcher
      EvaluationPeriods: 5
      MetricName: init_duration
      Namespace: LambdaInsights
      OKActions: []
      Period: 60
      Statistic: Maximum
      Threshold: 500
      TreatMissingData: notBreaching
    Type: AWS::CloudWatch::Alarm
  TableAccountsCDCDispatcherLambdaP99Alarm:
    Condition: CreateChangeDataCaptureAlarmsCondition
    Properties:
      ActionsEnabled: true
      AlarmActions: []
      AlarmDescription: TableAccountsCDCDispatcher P99 Latency > 1000ms
      AlarmName: TableAccountsCDCDispatcher Lambda Latency (P99)
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 3
      Dimensions:
        - Name: FunctionName
          Value:
            Ref: TableAccountsCDCDispatcher
      EvaluationPeriods: 5
      ExtendedStatistic: p99
      MetricName: Duration
      Namespace: AWS/Lambda
      OKActions: []
      Period: 60
      Threshold: 1000
      TreatMissingData: notBreaching
      Unit: Milliseconds
    Type: AWS::CloudWatch::Alarm
  TableAccountsCDCDispatcherLogGroup:
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${TableAccountsCDCDispatcher}
      RetentionInDays:
        Ref: LogRetentionInDays
    Type: AWS::Logs::LogGroup
  TableAccountsCDCDispatcherMaxIteratorAgeAlarm:
    Condition: CreateChangeDataCaptureAlarmsCondition
    Properties:
      ActionsEnabled: true
      AlarmActions: []
      AlarmDescription: TableAccountsCDCDispatcher Max Iterator Age > 30ms
      AlarmName: TableAccountsCDCDispatcher Max Iterator Age
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 3
      Dimensions:
        - Name: FunctionName
          Value:
            Ref: TableAccountsCDCDispatcher
      EvaluationPeriods: 5
      MetricName: IteratorAge
      Namespace: AWS/Lambda
      OKActions: []
      Period: 60
      Statistic: Average
      Threshold: 30
      TreatMissingData: notBreaching
      Unit: Seconds
    Type: AWS::CloudWatch::Alarm
  TableAccountsCDCDispatcherMemoryUsageAlarm:
    Condition: CreateChangeDataCaptureAlarmsCondition
    Properties:
      ActionsEnabled: true
      AlarmActions: []
      AlarmDescription: TableAccountsCDCDispatcher Memory Usage > 80%
      AlarmName: TableAccountsCDCDispatcher Memory Usage
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 3
      Dimensions:
        - Name: function_name
          Value:
            Ref: TableAccountsCDCDispatcher
      EvaluationPeriods: 5
      MetricName: memory_utilization
      Namespace: LambdaInsights
      OKActions: []
      Period: 60
      Statistic: Maximum
      Threshold: 80
      TreatMissingData: notBreaching
    Type: AWS::CloudWatch::Alarm
  TableEmail:
    Properties:
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled:
          Fn::If:
            - IsProd
            - true
            - false
      SSESpecification:
        SSEEnabled:
          Fn::If:
            - IsProd
            - true
            - false
      Tags:
        - Key: StageName
          Value:
            Ref: StageName
        - Key: TableName
          Value: TableEmail
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
    Type: AWS::DynamoDB::Table
Transform: AWS::Serverless-2016-10-31
